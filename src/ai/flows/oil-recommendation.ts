// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Personalized cooking oil recommendations based on purchase history.
 *
 * - oilRecommendation - A function that recommends cooking oils based on purchase history.
 * - OilRecommendationInput - The input type for the oilRecommendation function.
 * - OilRecommendationOutput - The return type for the oilRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OilRecommendationInputSchema = z.object({
  purchaseHistory: z
    .string()
    .describe('A string containing the purchase history of the user.'),
});
export type OilRecommendationInput = z.infer<typeof OilRecommendationInputSchema>;

const OilRecommendationOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('A list of recommended cooking oils based on the purchase history.'),
});
export type OilRecommendationOutput = z.infer<typeof OilRecommendationOutputSchema>;

export async function oilRecommendation(input: OilRecommendationInput): Promise<OilRecommendationOutput> {
  return oilRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'oilRecommendationPrompt',
  input: {schema: OilRecommendationInputSchema},
  output: {schema: OilRecommendationOutputSchema},
  prompt: `You are an expert in cooking oils. Based on the purchase history of the user, you will recommend other cooking oils that they might be interested in.

Purchase History: {{{purchaseHistory}}}

Recommendations:`,
});

const oilRecommendationFlow = ai.defineFlow(
  {
    name: 'oilRecommendationFlow',
    inputSchema: OilRecommendationInputSchema,
    outputSchema: OilRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
